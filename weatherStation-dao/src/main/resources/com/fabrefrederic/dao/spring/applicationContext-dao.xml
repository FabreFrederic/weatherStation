<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd

	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="classpath:com/fabrefrederic/dao/spring/applicationContext-dao-model.xml" />
	<import resource="classpath:com/fabrefrederic/dao/spring/applicationContext-dao-dataSource.xml" />

	<!-- Déclaration de l'entity manager -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

<!--
	Usually, JPA defines a persistence unit through the META-INF/persistence.xml file.
	Starting with Spring 3.1, this XML file is no longer necessary – the LocalContainerEntityManagerFactoryBean
	now supports a ‘packagesToScan’ property where the packages to scan for @Entity classes can be specified.
-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="jpaPersistenceUnit" />
		<property name="packagesToScan" value="com.fabrefrederic.business" />
  		<property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="persistenceProvider">
        	<bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${model.hibernate.dialect}" />
				<property name="showSql" value="${model.hibernate.showsql}" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.format_sql" value="${model.hibernate.format_sql}" />
				<entry key="hibernate.cache.use_second_level_cache" value="${model.hibernate.cache.use_second_level_cache}" />
				<entry key="hibernate.cache.provider_class" value="${model.hibernate.cache.provider_class}" />
				<entry key="hibernate.cache.use_query_cache" value="${model.hibernate.cache.use_query_cache}" />
				<entry key="hibernate.cache.use_second_level_cache" value="${model.hibernate.cache.use_second_level_cache}" />
				<entry key="hibernate.cache.use_structured_cache" value="${model.hibernate.cache.use_structured_cache}" />
				<entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false" />
			</map>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:component-scan base-package="com.fabrefrederic.dao" />

</beans>
